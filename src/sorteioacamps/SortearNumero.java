/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sorteioacamps;

/**
 *
 * @author Lucas
 */
public class SortearNumero extends javax.swing.JFrame {

    FazSorteio sortear = new FazSorteio();
    
    public SortearNumero() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        numero_minimo = new javax.swing.JTextField();
        numero_maximo = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        fazer_sorteio = new javax.swing.JButton();
        label_sortear_numero = new javax.swing.JLabel();
        label_numero_sorteado_eh = new javax.swing.JLabel();
        numero_sorteado = new javax.swing.JLabel();
        voltar_inicio = new javax.swing.JButton();
        limpar_sorteio = new javax.swing.JButton();
        erro_inteiro = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sortear um Número");
        setLocation(new java.awt.Point(600, 300));
        setResizable(false);

        numero_minimo.setText("0");
        numero_minimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numero_minimoActionPerformed(evt);
            }
        });

        numero_maximo.setText("0");
        numero_maximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numero_maximoActionPerformed(evt);
            }
        });

        jLabel2.setText("Sortear entre");

        jLabel3.setText("e");

        fazer_sorteio.setText("Fazer Sorteio");
        fazer_sorteio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fazer_sorteioActionPerformed(evt);
            }
        });

        label_sortear_numero.setText("Sortear um Número em um Intervalo");

        label_numero_sorteado_eh.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        label_numero_sorteado_eh.setText("O NÚMERO SORTEADO É:");

        numero_sorteado.setFont(new java.awt.Font("Tahoma", 1, 128)); // NOI18N
        numero_sorteado.setText("???");

        voltar_inicio.setText("Voltar");
        voltar_inicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltar_inicioActionPerformed(evt);
            }
        });

        limpar_sorteio.setText("Limpar");
        limpar_sorteio.setEnabled(false);
        limpar_sorteio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpar_sorteioActionPerformed(evt);
            }
        });

        erro_inteiro.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        erro_inteiro.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label_sortear_numero)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(numero_minimo, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(numero_maximo, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(fazer_sorteio)
                                .addGap(18, 18, 18)
                                .addComponent(limpar_sorteio))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(label_numero_sorteado_eh))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(237, 237, 237)
                        .addComponent(numero_sorteado))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(voltar_inicio)))
                .addContainerGap(55, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(erro_inteiro)
                .addGap(184, 184, 184))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label_sortear_numero)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numero_maximo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fazer_sorteio)
                    .addComponent(jLabel3)
                    .addComponent(numero_minimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(limpar_sorteio))
                .addGap(3, 3, 3)
                .addComponent(erro_inteiro)
                .addGap(18, 18, 18)
                .addComponent(label_numero_sorteado_eh)
                .addGap(26, 26, 26)
                .addComponent(numero_sorteado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addComponent(voltar_inicio)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void numero_minimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numero_minimoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numero_minimoActionPerformed

    private void numero_maximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numero_maximoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numero_maximoActionPerformed

    private void fazer_sorteioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fazer_sorteioActionPerformed
        
        int num_max = 0;
        int num_min = 0;
        
        try{
        
            num_max = Integer.parseInt(numero_maximo.getText());
            num_min = Integer.parseInt(numero_minimo.getText());
        
        } catch(NumberFormatException e) {
            
            erro_inteiro.setText("Os campos devem conter somente números inteiros!");
        }
        
        if(num_min <= num_max){
            int num_sorteado = sortear.sorteio_numero(num_min, num_max);

            if(num_sorteado < 10){

                numero_sorteado.setText("00" + Integer.toString(num_sorteado));

            } else if(num_sorteado >= 10 && num_sorteado <= 99){

                numero_sorteado.setText("0"+ Integer.toString(num_sorteado));

            } else {

                numero_sorteado.setText(Integer.toString(num_sorteado));
                
            }
        
        } else {
            
            erro_inteiro.setText("Os inteiros devem ser inseridos em forma crescente!");
            
        }
        
            limpar_sorteio.setEnabled(true);
            fazer_sorteio.setEnabled(false);
        
    }//GEN-LAST:event_fazer_sorteioActionPerformed

    private void voltar_inicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltar_inicioActionPerformed
        
        this.setVisible(false);
        
    }//GEN-LAST:event_voltar_inicioActionPerformed

    private void limpar_sorteioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpar_sorteioActionPerformed
        
        numero_sorteado.setText("???");
        erro_inteiro.setText("");
        fazer_sorteio.setEnabled(true);
    }//GEN-LAST:event_limpar_sorteioActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SortearNumero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SortearNumero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SortearNumero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SortearNumero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SortearNumero().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel erro_inteiro;
    private javax.swing.JButton fazer_sorteio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel label_numero_sorteado_eh;
    private javax.swing.JLabel label_sortear_numero;
    private javax.swing.JButton limpar_sorteio;
    private javax.swing.JTextField numero_maximo;
    private javax.swing.JTextField numero_minimo;
    private javax.swing.JLabel numero_sorteado;
    private javax.swing.JButton voltar_inicio;
    // End of variables declaration//GEN-END:variables
}
